@model InvPhysicalInventoryDto
@{
    ViewData["Title"] = "Add PhysicalStock";
    var branches = (IList<Branch_SLM>)ViewBag.Branches;
}


@section Styles{
    <link href="~/app-assets/vendors/css/tables/datatable/datatables.min.css" rel="stylesheet" asp-append-version="true" />
    <!--select2-->
    <link href="~/app-assets/vendors/select2/dist/css/select2.min.css" rel="stylesheet" asp-append-version="true" />
    <link rel="stylesheet" type="text/css" href="~/app-assets/vendors/css/pickadate/pickadate.css" asp-append-version="true">

}
@section Scripts{
   
    <!--select2-->
    <script src="~/app-assets/vendors/select2/dist/js/select2.min.js" asp-append-version="true"></script>
    <script src="~/app-assets/js/datetime-plugin-bundle.min.js" type="text/javascript" asp-append-version="true"></script>
    
    <environment include="Development">
        <script src="~/app-assets/vendors/js/datatable/datatables.min.js" type="text/javascript" asp-append-version="true"></script>
        <script src="~/app-assets/js/data-tables/datatable-basic.min.js" type="text/javascript" asp-append-version="true"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/js/Shared/Index.min.js" type="text/javascript" asp-append-version="true"></script>
    </environment>
    
    
    @if (Model.Response != null)
    {
        if (Model.Response.ResponseCode == StatusCodes.Created.ToInt())
        {
            <script type="text/javascript">
                $("#btn-submit").attr("disabled", "disabled");
            </script>
        }

        var responseObject = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Response);
        
        <script type="text/javascript">
            AlertManager.AlertSweetly(JSON.parse('@Html.Raw(responseObject)'), '/PhysicalStocks/Add');
        </script>

        @if (Model.Response.ErrorOccured)
         {
        @*@if (Model.Response.ErrorCode == StatusCodes.Invalid_State.ToInt())
            {
                <script type="text/javascript">
                    sweetAlert.error({ title: 'Invalid Info!', text: '@Model.Response.ResponseMessage' });
                </script>
            }*@
             @if (Model.Response.ErrorCode == StatusCodes.Error_Occured.ToInt())
              {
                  <script type="text/javascript">
                      sweetAlert.error({ text: '@Model.Response.ErrorMessage' });
                  </script>
              }
         }
    }
    

    <!--view related javascript-->

    <script type="text/javascript">


        function ResetForm() {
            $('#AddPhysicalStockForm').trigger("reset");
            $('.select').trigger('change.select2');
        }
        function ApplySelect2() {
            $('.select').select2();
        }

        var FormIsValid = true;
        var NonEmptyRowsCount = 0;
        $(document).ready(function () {


            ApplySelect2();
            //calculate final sales price here
            var rowsCount = $("table#add-stock-table tbody tr").length;
            for (var i = 0; i < rowsCount; i++) {
                CalculateSalesRateIncTax(i);
            }

            $('#AddPhysicalStockForm').submit(function (e) {

                FormIsValid = true;

                if ($('#BillDate').val() === "") {
                    FormIsValid = false;
                    e.preventDefault();
                    sweetAlert.error({ title: 'Required!', text: 'Bill Date is Required.' });

                } else {
                    NonEmptyRowsCount = 0;
                    var rows = $("table#add-stock-table tbody tr");
                    for (var i = 0; i < rows.length; i++) {
                        var row = rows[i];
                        var ItemVal = $(row).find("td:eq(0) select").val();
                        if (ItemVal != "") {
                            ValidateAll(row);
                        }
                        else {
                            //Quantity has value
                            if ($(row).find("td:eq(2) input").val() != "") {
                                ValidateAll(row);
                            }
                            else {
                                $(row).find("td:eq(2) .invalid-span").css("display", "none");
                            }

                            //Vendor has value
                            if ($(row).find("td:eq(3) select").val() != "") {
                                ValidateAll(row);
                            }
                            else {
                                $(row).find("td:eq(3) .invalid-span").css("display", "none");
                            }

                            //expiry-date has value
                            //if ($(row).find("td:eq(4) input").val() != "") {
                            //    ValidateAll(row);
                            //}
                            //else {
                            //    $(row).find("td:eq(4) .invalid-span").css("display", "none");
                            //}

                            //purchase-rate has value
                            if ($(row).find("td:eq(5) input").val() != "") {
                                ValidateAll(row);
                            }
                            else {
                                $(row).find("td:eq(5) .invalid-span").css("display", "none");
                            }

                            ////sales-rate has value
                            //if ($(row).find("td:eq(6) input").val() != "") {
                            //    ValidateAll(row);
                            //}
                            //else {
                            //    $(row).find("td:eq(6) .invalid-span").css("display", "none");
                            //}

                            //Tax has value
                            if ($(row).find("td:eq(7) select").val() != "") {
                                ValidateAll(row);
                            }
                        }
                    }

                    if (FormIsValid == false || NonEmptyRowsCount == 0) {
                        e.preventDefault();
                    }
                    if (NonEmptyRowsCount == 0) {
                        sweetAlert.error({ title: 'Invalid!', text: 'Stock Table is empty.' });
                    }
                }


                //SaveRole();

            });
        });
        function ValidateAll(row) {
            NonEmptyRowsCount++;
            var rowIsValid = true;

            //validate Item
            if ($(row).find("td:eq(0) select").val() == "") {
                $(row).find("td:eq(0) .invalid-span").css("display", "block");
                rowIsValid = false;
            }
            else {
                $(row).find("td:eq(0) .invalid-span").css("display", "none");
            }

            //validate Quantity
            if ($(row).find("td:eq(2) input").val() == "") {
                $(row).find("td:eq(2) .invalid-span").css("display", "block");
                rowIsValid = false;
            }
            else {
                $(row).find("td:eq(2) .invalid-span").css("display", "none");
            }

            ////validate Vendor
            //if ($(row).find("td:eq(3) select").val() == "") {
            //    $(row).find("td:eq(3) .invalid-span").css("display", "block");
            //    rowIsValid = false;
            //}
            //else {
            //    $(row).find("td:eq(3) .invalid-span").css("display", "none");
            //}

            //validate expiry date
            //if ($(row).find("td:eq(4) input").val() == "") {
            //    $(row).find("td:eq(4) .invalid-span").css("display", "block");
            //    rowIsValid = false;
            //}
            //else {
            //    $(row).find("td:eq(4) .invalid-span").css("display", "none");
            //}

            //validate purchase rate
            if ($(row).find("td:eq(5) input").val() == "") {
                $(row).find("td:eq(5) .invalid-span").css("display", "block");
                rowIsValid = false;
            }
            else {
                $(row).find("td:eq(5) .invalid-span").css("display", "none");
            }

            //validate sales rate
            //if ($(row).find("td:eq(6) input").val() == "") {
            //    $(row).find("td:eq(6) .invalid-span").css("display", "block");
            //    rowIsValid = false;
            //}
            //else {
            //    $(row).find("td:eq(6) .invalid-span").css("display", "none");
            //}


            if (rowIsValid == false) {
                FormIsValid = false;
            }
            return rowIsValid;
        }

        function AddRow() {
            var nextRowNo = parseInt($('#add-stock-table tbody tr:last')[0].getAttribute("data-row-no")) + 1;
            $.ajax({
                url: '/PhysicalStocks/GetStockTableRow?rowNo=' + nextRowNo,
                type: 'GET',
                success: function (newRow) {
                    //SUCCESS
                    $('#add-stock-table tbody tr:last').after(newRow);
                    ApplySelect2();
                },
                error: function (error) {
                    console.log('error while adding row: ', error);
                },
            });
        }
        function RemoveRow(rowNo) {
            var rowSlector = 'table#add-stock-table tbody tr.row-no-' + rowNo + ' ';

            if ($("table#add-stock-table tbody tr").length > 1) {
                $(rowSlector + " td .row-status").val(STATUSES.DELETED);
                var deletedRow = $(rowSlector).clone();
                $(deletedRow).removeClass('row-no-' + rowNo);
                $(deletedRow).addClass('del-row-no-' + rowNo);
                $('#deleted-rows-table tbody tr:last').after(deletedRow);
                $(rowSlector).remove();
            }
        }
        function CalculateSalesRateIncTax(rowNo) {
            var salesRate = 0;
            var finalSalesRate = 0;
            var taxAmt = 0;
            var isTaxInPercent = false;
            if ($(".row-no-" + rowNo + " td .sales-rate").val() != "") {
                salesRate = parseFloat($(".row-no-" + rowNo + " td .sales-rate").val());
                finalSalesRate = salesRate;
            }
            if ($(".row-no-" + rowNo + " td .tax-select option:selected")[0].getAttribute("data-tax-amount") != null) {
                taxAmt = parseFloat($(".row-no-" + rowNo + " td .tax-select option:selected")[0].getAttribute("data-tax-amount"));
                isTaxInPercent = ($(".row-no-" + rowNo + " td .tax-select option:selected")[0].getAttribute("data-is-in-percent") === 'True');

                if (!isTaxInPercent) {
                    finalSalesRate = finalSalesRate + taxAmt;
                }
                else {
                    var taxAmtPercent = (taxAmt * salesRate) / 100;
                    finalSalesRate = finalSalesRate + taxAmtPercent;
                }
            }
            if (finalSalesRate != null) {
                finalSalesRate = Number(finalSalesRate.toFixed(2));
            }
            $(".row-no-" + rowNo + " td .sales-rate-inc-tax").html(finalSalesRate);
        }

        var flag = true;
        function ItemBarCodeSelect_OnChange(rowNo) {

            if (flag) {
                var ItemId = $("#InvPhysicalInventoryItem_" + rowNo + "__BarCodeId option:selected")[0].getAttribute('data-ItemId');
                $('#InvPhysicalInventoryItem_' + rowNo + '__ItemId').val(ItemId);
                flag = false;
                $('#InvPhysicalInventoryItem_' + rowNo + '__ItemId').trigger('change.select2');
                flag = true;
            }
        }
        function ItemSelect_OnChange(rowNo) {
            var PurchaseRate = $("#InvPhysicalInventoryItem_" + rowNo + "__ItemId option:selected")[0].getAttribute('data-PurchaseRate');
            var SalesRate = $("#InvPhysicalInventoryItem_" + rowNo + "__ItemId option:selected")[0].getAttribute('data-SalesRate');
            $("#InvPhysicalInventoryItem_" + rowNo + "__PurchaseRate").val(PurchaseRate);
            $("#InvPhysicalInventoryItem_" + rowNo + "__SalesRate").val(SalesRate);
            if (flag) {
                var ItemBarCode = $("#InvPhysicalInventoryItem_" + rowNo + "__ItemId option:selected")[0].getAttribute('data-ItemBrCode');
                if (ItemBarCode != null) {
                    ItemBarCode = ItemBarCode.trim();
                }
                flag = false;
                if (ItemBarCode != "") {
                    var ItemBarCodeId = $("#InvPhysicalInventoryItem_" + rowNo + "__BarCodeId option:contains(" + ItemBarCode + ")").val();
                    $("#InvPhysicalInventoryItem_" + rowNo + "__BarCodeId").val(ItemBarCodeId);
                    $("#InvPhysicalInventoryItem_" + rowNo + "__BarCodeId").trigger('change.select2');
                }
                else {
                    $("#InvPhysicalInventoryItem_" + rowNo + "__BarCodeId").val("");
                    $("#InvPhysicalInventoryItem_" + rowNo + "__BarCodeId").trigger('change.select2');
                }
                flag = true;
            }
        }
    </script>
}


<!-- File export table -->
<section id="file-export">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Add Stock</h4>
                    <p class="card-text">
                    </p>
                </div>
                <div class="card-content ">
                    <div class="row" style="margin:auto !important">
                        <div class="col-md-12">
                            <div class="form-group" style="margin:auto !important">
                            </div>
                        </div>
                    </div>
                    <form id="AddPhysicalStockForm" autocomplete="off" class="form pt-3" asp-route="AddPhysicalStock" method="post">
                        <div class="form-body">
                            <div class="px-3">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label asp-for="@Model.BillNo"></label>&nbsp;<span class="red">*</span>
                                            <input asp-for="@Model.BillNo" type="text" class="form-control border-grey" required />
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label asp-for="@Model.BillDate"></label>&nbsp;<span class="red">*</span>
                                            <div class="input-group font-small-3">
                                                <input type='text' asp-for="@Model.BillDate" class="form-control pickadate-selectors filter  bg-white" value="@Model.BillDate.ToString("dd MMMM, yyyy")" required />
                                                <div class="input-group-append">
                                                    <span class="input-group-text">
                                                        <span class="fa fa-calendar-o"></span>
                                                    </span>
                                                </div>
                                            </div>
                                            @*<input asp-for="@Model.BillDate" type="date" class="form-control border-grey" required />*@
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label asp-for="@Model.BranchId"></label>&nbsp;<span class="red">*</span>
                                            <select class="form-control select" asp-for="@Model.BranchId">
                                                <option value=""></option>
                                                @foreach (var branch in branches)
                                                {
                                                    <option value="@branch.Value" selected="@(branch.IsMainBranch == true ? "selected" : null )">@branch.Text</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="card-body card-dashboard table-responsive">
                                        <table class="table table-striped table-bordered" id="add-stock-table">
                                            <thead class="add-stock-thead" style="font-size: smaller;">
                                                <tr>
                                                    <th>Item</th>
                                                    <th>Bar Code</th>
                                                    <th>Quantity</th>
                                                    <th>Vendor</th>
                                                    <th>Expiry</th>
                                                    <th>Purchase Rate</th>
                                                    <th>Sales Rate</th>
                                                    <th>Tax</th>
                                                    <th>Sales Rate <span class="red" style="font-size:xx-small">(Inc Tax)</span></th>
                                                    <th>Remove</th>
                                                    @*<th style="visibility:hidden;"></th>*@
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (!Model.InvPhysicalInventoryItem.Any())
                                                {
                                                    @for (int i = 0; i < 5; i++)
                                                    {
                                                        @await Component.InvokeAsync("AddStockTableRow", new Tuple<int, InvPhysicalInventoryItemDto>(i, null));
                                                    }
                                                }
                                                else
                                                {
                                                    @for (int i = 0; i < Model.InvPhysicalInventoryItem.Count(); i++)
                                                    {
                                                        @await Component.InvokeAsync("AddStockTableRow", new Tuple<int, InvPhysicalInventoryItemDto>(i, Model.InvPhysicalInventoryItem[i]));
                                                    }
                                                }
                                            </tbody>
                                            <tfoot class="add-stock-tfoot" style="font-size: smaller;">
                                                <tr>
                                                    <th>Item</th>
                                                    <th>Bar Code</th>
                                                    <th>Quantity</th>
                                                    <th>Vendor</th>
                                                    <th>Expiry</th>
                                                    <th>Purchase Rate</th>
                                                    <th>Sales Rate</th>
                                                    <th>Tax</th>
                                                    <th>Sales Rate <span class="red" style="font-size:xx-small">(Inc Tax)</span></th>
                                                    <th>Remove</th>
                                                    @*<th style="visibility:hidden;"></th>*@
                                                </tr>
                                                <tr class="border-1 border-white">
                                                    <td class="border-0"><input type="button" class="btn btn-sm bg-blue btn-flat white" value="Add More" onclick="AddRow()" /></td>
                                                </tr>
                                            </tfoot>
                                        </table>


                                        <!--NEVER EVER REMOVE THIS TABLE-->
                                        <table style="display:none;" id="deleted-rows-table">
                                            <tbody>
                                                <!--NEVER EVER REMOVE THIS ROW-->
                                                <tr></tr>
                                            </tbody>
                                        </table>

                                        <div class="row">
                                            <div class="col-lg-12">
                                                <input type="submit" class="btn btn-block btn-lg bg-blue btn-flat white" value=" Save " id="btn-submit" />
                                                <input type="button" class="btn btn-block btn-lg btn-raised btn-warning" value=" Clear " style="float:right;" onclick="ResetForm()" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- File export table -->